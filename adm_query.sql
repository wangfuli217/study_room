

CREATE OR REPLACE VIEW ADM_EXTENT_COUNT AS
SELECT 'MEM_UNDO_TBS' TBS_NAME,
       COUNT(*) TOTAL_COUNT,
       SUM (DECODE(X.STATE,'F',1,0 )) FREE_COUNT,
       SUM(DECODE(X.STATE,'F',0, 1)) USED_COUNT
FROM D$TABLESPACE_EXTENT ( 'MEM_UNDO_TBS' ) X
UNION ALL
SELECT 'MEM_TEMP_TBS' TBS_NAME,
       COUNT(*) TOTAL_COUNT,
       SUM (DECODE(X.STATE,'F',1,0 )) FREE_COUNT,
       SUM(DECODE(X.STATE,'F',0, 1)) USED_COUNT
FROM D$TABLESPACE_EXTENT ( 'MEM_TEMP_TBS' ) X
UNION ALL
SELECT 'MEM_DATA_TBS' TBS_NAME,
       COUNT(*) TOTAL_COUNT, 
       SUM (DECODE(X.STATE,'F',1,0 )) FREE_COUNT,
       SUM(DECODE(X.STATE,'F',0, 1)) USED_COUNT
FROM D$TABLESPACE_EXTENT ( 'MEM_DATA_TBS' ) X
UNION ALL
SELECT 'DICTIONARY_TBS' TBS_NAME,
       COUNT(*) TOTAL_COUNT,
       SUM (DECODE(X.STATE,'F',1,0 )) FREE_COUNT,
       SUM(DECODE(X.STATE,'F',0, 1)) USED_COUNT
FROM D$TABLESPACE_EXTENT ( 'DICTIONARY_TBS' ) X
UNION ALL
SELECT 'TEST_TBS' TBS_NAME,
       COUNT(*) TOTAL_COUNT,
       SUM (DECODE(X.STATE,'F',1,0 )) FREE_COUNT,
       SUM(DECODE(X.STATE,'F',0, 1)) USED_COUNT
FROM D$TABLESPACE_EXTENT ( 'TEST_TBS' ) X
UNION ALL
SELECT 'TEST_TBS_TEMP' TBS_NAME,
       COUNT(*) TOTAL_COUNT,
       SUM (DECODE(X.STATE,'F',1,0 )) FREE_COUNT,
       SUM(DECODE(X.STATE,'F',0, 1)) USED_COUNT
FROM D$TABLESPACE_EXTENT ( 'TEST_TBS_TEMP' ) X
;

COMMIT;


CREATE OR REPLACE VIEW ADM_TABLESPACE AS
SELECT X.TBS_ID,
       X.TBS_NAME TBS_NAME,
       X.IS_ONLINE ,
       X.EXTENT_SIZE ,
       (X.EXTENT_SIZE  *  TOTAL_COUNT)/1024/1024 TOTAL_SIZE_MB,
       (X.EXTENT_SIZE  *  USED_COUNT)/1024/1024 USED_SIZE_MB,
       (X.EXTENT_SIZE  *  FREE_COUNT)/1024/1024 FREE_SIZE_MB,
       ROUND((USED_COUNT / TOTAL_COUNT),2) * 100  USED_PCT
FROM   V$TABLESPACE X INNER JOIN ADM_EXTENT_COUNT Y ON X.TBS_NAME = Y.TBS_NAME;

COMMIT;


CREATE OR REPLACE VIEW  ADM_TABLES AS
SELECT
        OWNER,
        RPAD( TABLE_NAME, 30 ) TABLE_NAME ,
        TABLESPACE_NAME                 AS "TABLESPACE",
        INITIAL_EXTENT                  AS "INIT",
        NEXT_EXTENT                     AS "NEXT",
        ROUND(BLOCKS * 8192 / 1024 / 1024) AS "USED MB"
FROM    ALL_ALL_TABLES
WHERE   OWNER != '_SYSTEM';

COMMIT;

CREATE OR REPLACE VIEW ADM_INDEX AS
SELECT
        INDEX_NAME,
        RPAD( TABLE_NAME, 30 )          AS "TABLE",
        TABLE_OWNER,
        TABLESPACE_NAME                 AS "TABLESPACE",
        INITIAL_EXTENT                  AS "INIT",
        NEXT_EXTENT                     AS "NEXT",
        ROUND(BLOCKS * 8192 / 1024 / 1024) AS "USED MB"
FROM    USER_INDEXES;
COMMIT;
